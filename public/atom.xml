<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Code Adventurer]]></title>
  <link href="http://codeadventurer.com/atom.xml" rel="self"/>
  <link href="http://codeadventurer.com/"/>
  <updated>2013-09-07T21:04:40-06:00</updated>
  <id>http://codeadventurer.com/</id>
  <author>
    <name><![CDATA[Persa Zula]]></name>
    <email><![CDATA[persa@persazula.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Getting a New Development Environment Up &amp; Running on Mac OSX]]></title>
    <link href="http://codeadventurer.com/2013/09/05/getting-a-new-development-environment-up-and-running-on-mac-osx"/>
    <updated>2013-09-05T21:14:00-06:00</updated>
    <id>http://codeadventurer.com/2013/09/05/getting-a-new-development-environment-up-and-running-on-mac-osx</id>
    <content type="html"><![CDATA[<p>Getting a new computer can be fun, but it also means a lot of work. Between running into bugs, new versions of software running amok, and documentation from various sources on the big, bad internet just not lining up, it can quickly go from being fun to just being plain frustrating.</p>

<!-- more -->


<p></p>

<p>I had a few of those moments myself in the last couple days, so I thought I&rsquo;d share with other journeymen and women some of the core items I get set up on a new machine. Perhaps a few of the snippets may help you get out of a snag, or maybe you&rsquo;ll find a new tool to love.</p>

<h2>In a loose order of importance</h2>

<h3>Basic Apps</h3>

<ol>
<li><p>The very first thing I installed was <a href="http://www.alfredapp.com/">Alfred</a>. If you love Spotlight, go ahead and stick with it, but I love the flexibility of Alfred for getting around, doing math for me, and lots of other tasks that usually take more than two keystrokes.</p></li>
<li><p><a href="http://www.mozilla.org/en-US/firefox/fx/#desktop">Firefox</a> &amp; <a href="https://www.google.com/intl/en/chrome/browser/">Chrome</a>, to have browsers to test in. I primarily use Chrome in my daily work, and only every touch Safari for testing.</p></li>
<li><p>A few extensions for Firefox and Chrome include <a href="http://getpocket.com">Pocket</a> (for saving things to read later), <a href="https://addons.mozilla.org/en-US/firefox/addon/web-developer/">Web Developer Toolbar</a>, <a href="https://addons.mozilla.org/en-US/firefox/addon/firebug/?src=search">Firebug</a>, and <a href="https://chrome.google.com/webstore/detail/personal-blocklist-by-goo/nolijncfnkgaikbjbdaogikpmpbdcdef?hl=en">Personal Blocklist for Chrome</a> (this one helps me block anything by w3cschools.com, because most of the time, that site does not promote best practices)</p></li>
<li><p><a href="http://www.evernote.com">Evernote</a> helps me keep track of everything &mdash; from grocery lists to bug fixes. Whenever I think of something, I can pop open Evernote, and be sure that when I need to come back to it, I can access it from anywhere. I love this app, and it&rsquo;s free!</p></li>
<li><p><a href="http://www.skype.com">Skype</a> helps me keep in touch with other developers, friends, and family around the world.</p></li>
</ol>


<h3>Developer&rsquo;s choice</h3>

<ol>
<li><p><a href="http://www.sublimetext.com">Sublime Text 2</a> is my editor of choice. Although I know there are many proponents of Vi/Vim and other non-GUI editors, my focus right now is on learning to become a better programmer. I&rsquo;ll focus on learning those later. Here are my favorite Sublime Text 2 packages:</p>

<ul>
<li><a href="http://docs.emmet.io/">Emmet</a></li>
<li><a href="http://net.tutsplus.com/articles/news/introducing-nettuts-fetch/">NetTuts Fetch</a></li>
<li><a href="https://tutsplus.com/lesson/lightning-fast-folder-and-file-creation/">Advanced New File</a></li>
<li><a href="https://tutsplus.com/lesson/sidebar-enhancements/">Sidebar Enhancements</a></li>
<li><a href="https://github.com/SublimeLinter/SublimeLinter">Sublime Linter</a></li>
<li>I also enable Sublime to be opened from the command line (this is where the Vim users scoff).
Run this in your terminal: <code>ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" /bin/subl
</code>   Now you will be able to open any file from the Terminal with <code>$ subl filename-here.html</code></li>
</ul>
</li>
<li><p>You can use Sublime Text 2 as your Markdown editor for blog posts, but I prefer the immediate feedback of <a href="http://mouapp.com">Mou</a>.</p>

<ul>
<li>I find that I&rsquo;m often at the command line wanting to use Mou, but don&rsquo;t feel like going through the GUI to open a new file or the app itself, so I set up an alias in my <code>.bash_profile</code> as follows: <code>alias mou="open /Applications/Mou.app"</code>. Now whenever I <code>rake</code> a new post in Octopress, I can immediately open it with Mou without having to take my hands off the keyboard.</li>
</ul>
</li>
</ol>


<h3>Terminal modifications</h3>

<ol>
<li><p>Speaking of the command line, I have a few little modifications I like to make to the Terminal in order to make it easier for me to use. Take what you want, leave what you don&rsquo;t.</p>

<ul>
<li>First, I update my Terminal theme. I personally like <a href="https://github.com/altercation/solarized">Solarized</a>, as it is easy on the eyes. <a href="http://noiseandheat.com/blog/2011/12/os-x-lion-terminal-colours/">Mac installation instructions here</a></li>
<li><p>A typical install of OS X won&rsquo;t create a <code>.bash_profile</code> for you. When you want to run functions from your command line, this is a must-have:</p>

<ul>
<li>Start up Terminal</li>
<li>Type <code>cd ~/</code> to go to your home folder</li>
<li>Type <code>touch .bash_profile</code> to create your new file.</li>
<li>Edit .bash_profile with your favorite editor (or you can just type <code>open -e .bash_profile</code> to open it in TextEdit.</li>
<li>Type <code>. .bash_profile</code> to reload .bash_profile and update any functions you add.</li>
</ul>
</li>
<li><p>I then update the Terminal to show the full path of where I am at. This helps me when I&rsquo;m working on programs that might have similar file names in different folders.</p>

<ul>
<li>In ~.bash_profile, add: <code>export PS1='\u@\H:\w$</code></li>
<li>Then restart bash</li>
</ul>
</li>
<li><p>I also like my file listings to be colorful, so I add the following items to my <code>.bash_profile</code>:</p>

<ul>
<li><code>export CLICOLOR=1</code></li>
<li><code>export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx</code> (This color set works well with the Solarized bash theme)</li>
</ul>
</li>
</ul>
</li>
</ol>


<h3>Development environment</h3>

<p>Now that my basic tools are installed, I get into installing my development tools specific to Ruby and my <a href="http://gschool.it">gSchool</a> learning needs.</p>

<ol>
<li>I got my Ruby development environment all set up and worked through the nuances with <a href="http://twitter.com/kytrinyx">Katrina Owen</a> from Jumpstart Lab. <a href="http://tutorials.jumpstartlab.com/topics/environment/environment.html">Here are the updated instructions</a>, in great detail.</li>
<li>I also copied over my ssh key pairs from my old machine to ensure I could continue using them for my GitHub and Heroku accounts. Remember to copy permissions for all files in the folder as well!</li>
<li>I also go to my home directory and <code>mkdir</code> a Sites folder &mdash; this restores the functionality of the Sites folder that used to work in previous OSX versions. I like to store my web projects in there for easy access. I also tell Alfred about that folder so that it becomes indexed and searchable.</li>
<li>Finally, I alias my Ruby versions and I am ready to go!</li>
</ol>


<h2>After all thatâ€¦</h2>

<p>I definitely recommend <a href="http://support.apple.com/kb/ht1553">creating a backup image of your machine</a> in this state, because it all takes a lot of work. Keep you image in a safe space, because you never know when you&rsquo;re going to need it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On a Quest for Awesome]]></title>
    <link href="http://codeadventurer.com/2013/09/02/on-a-quest-for-awesome"/>
    <updated>2013-09-02T17:41:00-06:00</updated>
    <id>http://codeadventurer.com/2013/09/02/on-a-quest-for-awesome</id>
    <content type="html"><![CDATA[<p>Two summers ago, after forays into organic farming and yurt living, I found myself in a really cool position at the Ohio State University <a href="http://www.oardc.ohio-state.edu/amp/">Agricultural Ecosystem Management Program</a> <!-- more --> that combined many things I was passionate about: building usable web systems, building community, and local agriculture. I was helping  make changes to <a href="http://localfoodsystems.org">Local Food Systems</a>, a website that helps connect entreprenuers with the food system (and those who run it) to help spawn new businesses based on the stream of goods and services in that system. I was working in <a href="http://drupal.org">Drupal</a>, and helped guide user experience and user interface decisions and changes in the three months that I was there on a half-time contract.</p>

<p>When the end of August came, I was sad to find out that this awesome job could not become a full-time endeavor because there were no new grants for the project, and neither could my half-time contract be extended. That same week, I was contacted by an internal recruiter for <a href="http://fathomdelivers.com">Fathom</a>, a digital marketing and analytics agency closer to where I had just moved, and began the conversation of becoming a full time web developer there.</p>

<p>Within a few weeks I was working for Fathom, building a lot of frontends to landing pages and microsites that were mostly used in email marketing and pay-per-click campaigns. In my first few weeks at Fathom, the Twitter-sphere was abuzz about <a href="http://www.gschool.it">gSchool</a>, a 6 month web development program in Denver, Colorado. I checked out the website, read a little bit about it, and thought to myself, &ldquo;Wow, it&rsquo;d be so great to learn web development from the pros, but who has the time to spend 6 months not earning a paycheck?&rdquo; I was intrigued by Ruby and thought it would be great to learn someday, but I moved on, back to my frontends, and back to my spaghetti PHP.</p>

<p>During my year at Fathom, I started getting more interested in Ruby, Test Driven Development, and Agile methodology, but the work we were doing on the web development team was rigid. But we sold our products well, and we had jam-packed development schedules. There was no time to explore or implement the things I was reading about, the things that I so desperately wanted to learn.</p>

<p>I thought I could fit in new learning by starting a <a href="http://codeforamerica.org">Code for America</a> Brigade in my town, dubbed <a href="http://codeforsummitcounty.org">Code for Summit County</a>, and organizing an event for the <a href="http://ndoch.org">National Day of Civic Hacking</a> locally, called <a href="http://hackNEO.org">HackNEO</a>, (which brought together over 30 local developers, designers, park lovers, and community memeber to hack on park data). As I worked and organized, I realized that if I was going to continue to be a leader, my learning needed a serious turbo boost to propel me forward past the bad habits I had acquired through self-teaching and a lack of a programming mentor.</p>

<p>I started exploring the option of attending one of those developer bootcamps that I had heard about. I needed a time and a place to focus on learning, without interruption. I researched all of them, read what students had to say about them, and thought about applying to them. But I wasn&rsquo;t sure if I could do it. I had a life at home &ndash; three months (the average of these bootcamps) was a long time away from everything that needed my attention &ndash; family, chickens, my cat, my jobâ€¦</p>

<p><strong>And then it all boiled down to making a pros and cons list.</strong></p>

<p>An honest, hard look at the opportunity cost, as well as the ways doing this now would pay off for the rest of my career, brought me to one conclusion: <strong>Just do it.</strong></p>

<p>My focus was being close to home, in Chicago or New York at the bootcamps available there, when suddenly, seemingly out of the blue, <a href="https://twitter.com/steveklabnik/">Steve Klabnik</a> tweeted an application deadline reminder for gSchool. I had been following Steve on Twitter for a while, but hadn&rsquo;t realized he was an instructor for <a href="http://jumpstartlab.com">Jumpstart Lab</a>, the company that runs gSchool. I took another hard look at gSchool, and completed the application. I didn&rsquo;t think I stood a chance.</p>

<p>Fast-forward to today, and here I am, writing this post in Denver, Colorado. Next week we start gSchool[1], the second class that gSchool will graduate, and my coding adventures will continue. I will have experienced mentors helping me understand the tough spots, pushing me to the next level, and helping me unlearn bad habits, learn a new language, and build the skills needed to bring to life the ideas that have been gnawing at me for years.</p>

<p>I plan to document the journey so that others may have a map to guide them.</p>
]]></content>
  </entry>
  
</feed>
