<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: projects | Code Adventurer]]></title>
  <link href="http://codeadventurer.com/categories/projects/atom.xml" rel="self"/>
  <link href="http://codeadventurer.com/"/>
  <updated>2014-11-02T12:23:37-05:00</updated>
  <id>http://codeadventurer.com/</id>
  <author>
    <name><![CDATA[Persa Zula]]></name>
    <email><![CDATA[persa@persazula.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Building My Own Lightsaber: Ergodox Tips]]></title>
    <link href="http://codeadventurer.com/2014/11/02/building-my-own-lightsaber-ergodox-tips"/>
    <updated>2014-11-02T11:08:00-05:00</updated>
    <id>http://codeadventurer.com/2014/11/02/building-my-own-lightsaber-ergodox-tips</id>
    <content type="html"><![CDATA[<p>Building a keyboard can be likened to building a lightsaber. I set off on an adventure, found some plans, and somehow found the confidence to give it a try.</p>

<p>This is not an endeavor that happens without trepidation. When I first decided to spring for an Ergodox kit on <a href="http://massdrop.com">Massdrop</a>, I knew that I wouldn&rsquo;t be getting the parts in the mail for months. I figured I knew how to do a little soldering (thanks to the <a href="http://concoctory.com/">Concococtory&rsquo;s</a> beginner class), and it wouldn&rsquo;t be a big deal. But once the kit was on my front porch, months later, I started to doubt my abilities to complete this project.</p>

<!-- more -->


<p>I opened up the package and found ~100 diodes to be surface-mounted, two PCBs, two USB cables, three LED&rsquo;s, two TRSS connectors, one I/O expanders, an I/O expansion cable, mechanical key switches, keycaps, and a case.</p>

<p>I found the instructions to build the kit online, and got everything in place to begin the process. I messed up on a few counts, but I finished it, and I wanted to provide resources for other people to be able to build their own without as many hiccups as I encountered.</p>

<h2>Things you will need (learned the hard way)</h2>

<h4>1. A Good Soldering Iron</h4>

<p>Before you get your ErgoDox kit, get a <a href="https://www.sparkfun.com/products/10707">50 watt, variable temperature soldering iron</a> from SparkFun</p>

<p>I started this project with a cheap RadioShack soldering iron. It got too hot too fast, and couldn&rsquo;t maintain a reasonable temperature for soldering SMDs onto a PCB. I had to stop construction in order to get a proper variable-temperature iron in the mail.</p>

<h4>2. Soldering and De-soldering consumables</h4>

<p>You&rsquo;re going to need a good, thin solder for the work you will be doing on the Ergodox. <a href="http://www.amazon.com/Amico-0-3mm-Rosin-Solder-Soldering/dp/B008DEYEAW">This one</a> is a good choice.
You&rsquo;re also going to need a few things to help you when you mess up. I recommend some <a href="https://www.amazon.com/gp/product/B003E48ERU">desoldering wick</a>, and a good <a href="https://www.amazon.com/gp/product/B0089EQGW0">flux pen</a>.</p>

<h4>3. A small electronics tool kit</h4>

<p>The tools I found I got the most use out of for this project were:</p>

<ul>
<li><a href="http://www.amazon.com/Testors-8942T-Reverse-Action-Tweezers/dp/B003ZD1148">Reverse-action tweezers</a> (used for placing the SMD&rsquo;s)</li>
<li>Needle-nose pliers</li>
<li>Wire cutters</li>
<li>A sharp pocket knife</li>
<li>Solder sucker</li>
<li>A magnifying glass, preferably one with a built in light (like <a href="http://www.amazon.com/3-5x12x-Helping-Magnifying-Soldering-Magnifier/dp/B009NOG9TA">this one</a>)</li>
<li>Voltmeter</li>
</ul>


<h4>4. A workspace</h4>

<ul>
<li>Big enough to leave everything spread out</li>
<li>Safe from pets and kids who might want to play with the parts</li>
<li>Good lighting</li>
<li>Well-ventilated (for soldering)</li>
</ul>


<h4>5. A few practice projects</h4>

<p>If you are new to soldering (or haven&rsquo;t soldered in a while), it&rsquo;s best to do a little bit of practice before you undertake this.</p>

<p>You should practice both your through-hole soldering, and your surface-mount soldering. SparkFun sells kits for this. This <a href="https://www.sparkfun.com/products/10723">Weevil kit</a> is a great through-hole project (make sure to read the instructions and tips), and the <a href="https://www.sparkfun.com/products/10935">Simon Says</a> project is an excellent surface-mount project to practice with.</p>

<h4>6. Some decent instructional videos</h4>

<p>I found <a href="https://www.youtube.com/watch?v=3NN7UGWYmBY">this video</a> to be helpful for learning how to do SMD soldering without needing more equipment.</p>

<p>I found <a href="https://www.youtube.com/watch?v=tlSY1uaw0GA">this video</a> helpful for learning how to desolder something that you surface-mounted. I had a couple of mishaps throughout the process and needed to use this technique a few times.</p>

<p>I also had a few switched that I needed to replace (due to my own poor soldering jobs, not due to Massdrop&rsquo;s shipment), and needed to know how to desolder the through-hole joints. <a href="https://www.youtube.com/watch?v=Z38WsZFmq8E">Here is a video that is helpful</a> for that task.</p>

<h4>7. Get going!</h4>

<p>Once you get your Massdrop order of parts, make sure you open it and count all of the pieces. I did not do this, and ended up with a few missing parts. It was a few weeks after the drop arrived, however, so I had to aquire the missing parts on my own.</p>

<p>Give yourself at least one weekend to do this project &mdash; after you have taken the time to get all of the things I have listed above, and also after you have practiced your soldering. Make sure you follow the order of instructions in the <a href="https://www.massdrop.com/ext/ergodox/assembly.php">Massdrop assembly instructions</a>, and you should come out on the other side of your weekend with a shiny new keyboard!</p>

<h4>Common Problems</h4>

<p>I encountered a lot of common problems along the way, and I thought I should list them here in case you have similar issues.</p>

<ul>
<li>Keyboard stops working after pressing a key</li>
</ul>


<p>This is likely due to a diode having a lose connection, or being damaged. Check across diodes with a voltmeter to see if any indicate the connection is not made. Use SMD desoldering skills that you learned to remove the offending diode, and if you removed it cleanly, re-solder the same diode to the board. If you have damaged the diode (either in placing it, or removing it), use a new one to ensure the problem will not persist.</p>

<ul>
<li>A key is not working when pressed</li>
</ul>


<p>This is likely due to a poor solder job around the key-switch. Flip the board over and check your joint. If it needs to be re-soldered, revisit the de-soldering a through-hole video to get proper instruction on how to remove the part, clean the through-hole, and re-solder the switch. This is often the better option than adding more solder, as the solder can overflow to the other side if you use too much, and cause damage to the board or the switch. There was only one switch I had that was actually malfunctioning after trying to remove and re-solder it. In that case, remove the switch completely using desoldering techniques, and use a spare provided by Massdrop.</p>

<ul>
<li>An entire column of keys do not work</li>
</ul>


<p>This is likely due to a poor solder job on the Teensy or the I/O expander. Check that every connection point is free of excess solder that may be connecting multiple together. Yes, these are small components, but careful soldering around these two will ensure that you don&rsquo;t run into this problem.</p>

<ul>
<li>Keys aren&rsquo;t all aligned well, causing issues with the keycaps not sitting in place well.</li>
</ul>


<p>This problem I could have avoided had I had experience with using a PCB and acrylic together. Although the solder on the other side should help keep your key-switches snugly in place (if you placed them in straight), if you ever do any modifications to your key-switches in the future (such as replacing what kind of springs you are using in your Cherry MX keys), you are at risk of damaging your solder job. To prevent this from happening, I recommend using a hot glue gun to place your key-switches in place on the acrylic <strong>before</strong> you place it through the PCB, and <strong>before</strong> you solder your key-switches in place. I&rsquo;m working on a second keyboard project at the moment and realize how much of a difference this makes now.</p>

<h2>The Review</h2>

<p>The Ergodox is a great keyboard for someone who is looking for a do-it-yourself alternative to matrix-style split keyboards. I found it a little difficult to get used to with the blank keycaps, so I joined in on a <a href="http://www.geekhack.org">GeekHack</a> group buy to buy keycaps for the ErgoDox. It took several months to get them, and in that time period I wasn&rsquo;t using the ErgoDox because of the learning curve. Once I got the keycaps, I still felt slow. I put the ErgoDox away for a while, as I wasn&rsquo;t fast enough with it yet to use it daily at work, and I wasn&rsquo;t working on side projects in the evenings. These past few weeks, my Apple Wireless keyboard died, and the only other keyboard I had around was the ErgoDox. I dusted it off, and within a few weeks got better at using it. I&rsquo;m still not fast enough with special characters that I use daily in programming, so it is a bit cumbersome. I feel that with a few months of practice, someone can bring their typing speed back up to par, and with a lot less wrist pain than a traditional keyboard.</p>

<h2>Photos of my project</h2>

<p><img src="/images/ergodox/ergodox_diodes.jpg" alt="Placing diodes using the magnifiying glass" /></p>

<p class="caption">Placing diodes using the magnifying glass</p>


<p><img src="/images/ergodox/keyswitches_on_acrylic.jpg" alt="Placing keyswitches on acrylic" /></p>

<p class="caption">Placing keyswitches on acrylic</p>


<p><img src="/images/ergodox/keyswitches_and_pcb.jpg" alt="Placing keyswitches on PCB" /></p>

<p class="caption">Placing keyswitches on PCB</p>


<p><img src="/images/ergodox/switches_and_diodes.jpg" alt="Soldering of switches" /></p>

<p class="caption">Soldering on switches after the diodes</p>


<p><img src="/images/ergodox/missing_keycap.jpg" alt="Finished, with missing keycap" /></p>

<p class="caption">Missing a keycap from the drop</p>


<p><img src="/images/ergodox/with_new_keycaps.jpg" alt="Finished, with new keycaps" /></p>

<p class="caption">The Ergodox today</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning is Effin' Hard]]></title>
    <link href="http://codeadventurer.com/2013/09/20/learning-is-effin-hard"/>
    <updated>2013-09-20T09:04:00-04:00</updated>
    <id>http://codeadventurer.com/2013/09/20/learning-is-effin-hard</id>
    <content type="html"><![CDATA[<p>Two days into building Event Reporter (you can find the project guidelines <a href="http://tutorials.jumpstartlab.com/projects/event_reporter.html">here</a>), I was flummoxed. <!-- more -->I&rsquo;d only been programming in Ruby for a little over a week, and we were diving head-first into test-driven development, while programming our first project without any training wheels. I came to Katrina, our super-heroine, molecular-biologist-turned-programmer instructor, and showed her my codebase. I was trying hard to separate concerns, build different classes, and keep every class and every test in its own file. This was starting to confuse me, and I was starting to lose sight of how to connect all the pieces back to one another. She took a few looks at what I had done, and asked me to <code>rm -rf</code> everything. All of it.</p>

<p>I looked at her in disbelief, explained that this was hours worth of work (even though really it looked like there wasn&rsquo;t much there)… and then complied. And cried a little inside.</p>

<p>Starting with a blank slate, and just two files this time &ndash; one for all of my classes, and one for all of my tests &ndash; I looked at the requirements and started building from the first test case, &ldquo;Happy Path&rdquo;. I had one day left before the project was done, and I was starting to stress out. Why was this so hard? Every class I&rsquo;ve ever taken, every passion I have pursued, has come easily to me. I can memorize insane facts, make connections between farming and management, lead groups, organize events, cook awesome organic meals, fix bicycles, juggle, live in yurts… and this project is the thing that is going to show me who is boss? I couldn&rsquo;t handle it.</p>

<p>With every hour that went by, as some tests failed and somewhere along the way, a few passed, I kept getting more and more frustrated. I started to doubt being ever able to call myself a web developer in the past. If I couldn&rsquo;t get this basic project to work, how was I going to move on to the next one? At 8:30pm the night before the project was due, I had only four methods that could pass tests. I shut my laptop, realized there was no way I could finish in time, and went to sleep.</p>

<p>I awoke at 3:30am from dreams where I was expertly solving Event Reporter, one passing test at a time, and quickly got out my laptop to try to recreate what was I was programming in my dreams. I cranked out the tests, and slowly started realizing that all of it was gibberish. Dream-state me wasn&rsquo;t actually expertly solving anything, although it seemed like it. But, I was awake anyway, so I hit the gym at 4am, got through my workout, and decided to come to gSchool early and try again.</p>

<p>I worked through my code for a little while before Katrina showed up (she has some crazy schedule where she goes to bed at 8pm and gets to work at 5am), and helped me back away from the ledge of jumping off of the programmer cliff. She looked at me and said, &ldquo;Learning is elfin' hard.&rdquo; Coming from a molecular biologist, I must have actually believed her, because an hour and  half later, after talking through my code and my struggles, I started to feel better about the project (even through I was still nowhere near done).</p>

<p>I&rsquo;m still not done today, but I have an idea of where I&rsquo;m going. Talking with Katrina, Jorge, and Franklin during different pieces, and various colorful feelings ranging from rage to anger to depression to self-hate (gosh, I never knew programming could bring out so much in me) really helped me understand that all of us at gSchool are used to being good at things. And a lot of us are struggling &mdash; not just with the syntax and the TDD mindset, but also with this ego-crushing feeling of failure.</p>

<p>And then I have to remind myself that today is day 10 of gSchool. And there are still five and a half months to go. Two weeks ago, I had never written a test for one of my programs. I&rsquo;ve learned a lot in this time &mdash; not only about Ruby, but about myself, my classmates, and the human spirit.</p>

<p>Thank you, gSchool, for showing me that learning a new programming language can be one of the most amazing things to teach me about myself.</p>

<p>If you&rsquo;re interested in the spiderweb of code I&rsquo;ve been building for this project, you can find my codebase on <a href="https://github.com/pzula/event_reporter">GitHub</a>. Feel free to let me know what you think, either about the code, or about my journey, or about similar experiences you&rsquo;ve had in the comments section.</p>
]]></content>
  </entry>
  
</feed>
