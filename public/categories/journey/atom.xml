<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: journey | Code Adventurer]]></title>
  <link href="http://codeadventurer.com/categories/journey/atom.xml" rel="self"/>
  <link href="http://codeadventurer.com/"/>
  <updated>2014-03-08T11:40:19-05:00</updated>
  <id>http://codeadventurer.com/</id>
  <author>
    <name><![CDATA[Persa Zula]]></name>
    <email><![CDATA[persa@persazula.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Value of Mentorship]]></title>
    <link href="http://codeadventurer.com/2014/02/21/the-value-of-mentorship"/>
    <updated>2014-02-21T13:46:00-05:00</updated>
    <id>http://codeadventurer.com/2014/02/21/the-value-of-mentorship</id>
    <content type="html"><![CDATA[<p>When making the decision to start a new career, you might find yourself a little lost. This can lead to a lot of online searches, reading articles and books on the subject at hand, and trying to understand quite a bit of contradictory advice. Instead of more online searches and questions posted to forums, the best investment you can make is in finding a mentor to help you through the maze. Throughout my journey, I&rsquo;ve come across great mentors, and have been starting to see patterns that emerge during a mentorship that make the relationship valuable and fulfilling for both parties.</p>

<h2>An unintended mentorship</h2>

<p>Although I had been interested in building websites from the age of 12, the thought of becoming a graphic designer had never crossed my mind as a pathway to web design when it came time to choose a degree. This changed after I had met my best friend&rsquo;s girlfriend, <a href="http://www.bethsteffel.com/">Beth Steffel</a>, a senior studying graphic design at the University of Akron.</p>

<p>Beth was easy to talk to, and we shared similar taste in art and design. I&rsquo;d spend time at her apartment, peppering her with questions, leafing through her books, and getting miniature lessons in design. Although we became good friends, I consider Beth my first mentor. Her patience, support, and encouragement led me to follow in her footsteps and join the Myers School of Art with a focus on graphic design, an invaluable decision for my career path.</p>

<h2>Being a mentee requires time and focus</h2>

<p>Throughout college, I was exposed to many talented professors that taught us invaluable lessons in design, but I didn&rsquo;t form tight mentor relationships with any of them. Looking back, I don&rsquo;t think it was the fault of the school or the professors, but more-so my situation. I supported myself throughout school, and would dash off from class to my various jobs, working 30 or more hours a week. I didn&rsquo;t have the time to focus on becoming the best designer that I could be, my focus was survival.</p>

<p>Over the years, I have found that the best mentorship situations arise when both parties take time to foster the relationship. Taking the time to ask well-formed questions, asking for actionable feedback, and constantly working towards improvement are the best ways to utilize the time of someone that has offered to help you.</p>

<h2>The characteristics of a good mentor</h2>

<p>When I wanted to try my hand at organic farming, I lived in a community of many smart, experienced farmers. They offered advice, support, and positions ranging from field hand to farm manager. Each of the farmers I worked with were mentors to me. They answered my questions with patience, they were interested in my progress and experiments, and they taught me (through conversations and first-hand experience) about agriculture, biology, animal husbandry, and human relationships.</p>

<p>Mentors are interested in answering your questions. They may not know the answers to everything, but they have many resources that they can reach out to in order to help you find the answers. Mentors are patient. They don&rsquo;t talk down to you, or make you feel inferior because the questions you ask are the mark of a &lsquo;n00b&rsquo;. They will help you understand tough concepts, whether it&rsquo;s by asking you questions to lead you to a discovery, drawing a chart, or breaking a problem down into smaller pieces. Mentors break down the barriers between novices and themselves. They present themselves as people, not as gods, and make you feel comfortable and welcomed under their guidance. Most important of all, a good mentor is one that wants you to succeed.</p>

<h2>Carrying on the tradition</h2>

<p>In the field of programming, we are constantly being mentored, whether we realize it or not. At gSchool, we had  a structured mentoring program. I was lucky enough to be paired with <a href="http://mattr.info/">Matt Rogers</a>, co-maintainer of Jekyll and Lead Engineer at <a href="http://hireology.com">Hireology</a>. Throughout the last 12 weeks of gSchool, we paired remotely almost weekly. We worked on  open-source projects like Jekyll and Tracks, and when I had questions about projects, we&rsquo;d pivot to my specific issues. It worked extremely well to be on a structured meeting schedule. Beyond our weekly meetings, Matt would send me check-in notes and ask about how things were going, whether it was the job hunt, VPS server setup, or meetings with instructors. He was in tune with what was going on during gSchool, and it was great to have a sounding board for ideas and questions that came out of our classwork and projects. I know that his mentorship helped me become a better programmer and will continue to help me grow in the future.</p>

<p>Matt&rsquo;s mantra during my mentorship has been that he has learned a lot in his life, and he hopes that his legacy is not the knowledge that he has gained or the programs that he has written, but the people that he has helped along the way. I&rsquo;ve been very lucky to have an abundance of people around me willing to help, regardless of the endeavor. I&rsquo;m adopting Matt&rsquo;s mantra, and would love to help you or someone you know become a better programmer through mentorship. <a href="http://twitter.com/pzula">Let me know</a> if you&rsquo;d like to spend some time pairing and learning together!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lessons Learned as a Budding Programmer]]></title>
    <link href="http://codeadventurer.com/2014/02/07/lessons-learned-as-a-budding-programmer"/>
    <updated>2014-02-07T10:12:00-05:00</updated>
    <id>http://codeadventurer.com/2014/02/07/lessons-learned-as-a-budding-programmer</id>
    <content type="html"><![CDATA[<h2>A little background</h2>

<p>I wasn&rsquo;t new to computers five months ago when I started gSchool, a 6-month intensive &amp; immersive course in learning Ruby and Ruby on Rails, but I might as well had been.</p>

<p>I had spent the previous six years as a web designer who had a knack for getting things to work right. I had set up VPS servers, built up content management systems, and even began building lead generation systems from scratch in PHP with MySQL backends. I had heard acronyms like OO and MVC, but really didn&rsquo;t know how to program in an object-oriented way, or why models, views, and controllers even mattered. I came to gSchool thinking I would naturally be a top student, as I had been in other courses and programs. I quickly realized this wasn&rsquo;t the case, but it took me some time to come to terms with that. Looking back on the last five months I think I know why, and hope to be able to help others learning how to program understand what is happening if they come across similar frustrations.</p>

<!-- more -->


<h2>A different way of thinking</h2>

<p>If you aren&rsquo;t coming from a background like engineering or law, it may be that you aren&rsquo;t used to thinking in a way that is conducive to writing computer programs. A quick check to see if you might be naturally inclined to breaking down a problem into it&rsquo;s smallest logical parts is to pull out a <a href="http://www.griffonprep.com/logicgame.html">LSAT logic game</a> and spend some time trying to figure it out. Did you get the right answers? Then you might not have the same struggles I had. Throughout grade school, whenever I saw one of these word problems, I shuddered and usually froze. I never got the right answer. It wasn&rsquo;t until my interview with Katrina Owen to join gSchool that I had finally understood how to solve these problems. I had always tried to solve these problems by keeping all of the information in my head without writing anything down or drawing a chart. Suddenly, with this hint at not trying to keep all the information in my head, I started to make some progress.</p>

<p>The first few weeks of the course, we spent at least 30 minutes every morning working on LSAT logic games, and every day I noticed that it took less and less time to get to the correct answers, now that I had an idea of how to break down my thoughts on paper. I didn&rsquo;t notice this at the time, but now that I&rsquo;ve been programming non-stop for five months, I find that breaking out a pen and paper when a problem gets tough helps me visualize and articulate the problem so that I better understand it. Which leads me to one of the biggest take-a-ways from the last five months:</p>

<h2>You can&rsquo;t solve a problem that you don&rsquo;t understand.</h2>

<p>Programming is so much more than just memorizing syntax and what the standard library gives you for free. It&rsquo;s about using those tools in a way that is effective. When I started gSchool, I didn&rsquo;t understand the Ruby syntax or the problems that we were trying to solve. Looking back, I know that I spent much more time worrying about not understanding the standard library than worrying about not understanding the problem. In my first course assessment, I was told that I had a much better understanding of Ruby than the evaluator had expected, but that my &ldquo;algorithmic thinking&rdquo; was weak. This was so very true. After that assessment, I started to shift the weight of my focus on solving smaller problems more frequently. I worked on features from top to bottom in our web-based projects using Capybara to build the feature tests. I paired with classmates and tried to talk through my thought process.</p>

<h2>Pairing is better than &ldquo;rubber-ducking&rdquo; for beginners</h2>

<p>I heard about &ldquo;rubber duck debugging&rdquo; early in the course, which comes from the famous book, <a href="http://pragprog.com/the-pragmatic-programmer">&ldquo;The Pragmatic Programmer&rdquo;</a>, and suggests that a developer carry around a rubber duck and attempt to explain the problem to the duck. Usually, in the course of trying to explain the problem, the developer will better understand the problem herself and solve the issue without having to reach out to co-workers. Although this method is helpful now that I&rsquo;m comfortable with Ruby, (without a real rubber duck&hellip;)  at the start of the course I found it was not as helpful as pairing. When faced with a tough problem early into the program, pairing with another student would lead to solving the problem faster, as well as gaining a better understanding of why the solution worked. This hasn&rsquo;t changed, as our projects become increasingly complex and the sheer number of things to be thinking about has grown exponentially, but now I find myself &ldquo;rubber-ducking&rdquo; my way through harder bugs without having to break the flow of my team&rsquo;s progress.</p>

<h2>Daily practice is the fastest way to improve</h2>

<p>I knew that I needed to focus on learning how to build software in an intense environment, which I why I chose to come to a six month immersive course. But regardless of the situation, I do believe firmly that the best way to improve at programming &mdash; whether or not you are a beginner &mdash; is daily practice. Even if the daily practice is only an hour a day, if that time is focused, the daily habit is a great recipe for success. During the course, we have had a few interruptions in our schedule &mdash; mainly holidays and a few weather events &mdash; and I found that the best way to stay engaged and &ldquo;in the game&rdquo; was to program even during the interruptions in the course. A great tool for daily practice of syntax, style, problem-solving and test-driven development is <a href="http://exercism.io">exercism.io</a>, built by Katrina Owen. After we graduated from pen-and-paper LSAT problem-solving early in the course, we moved into warming up daily solving problems on exercism, which has been an amazing help.</p>

<h2>Reference the docs. A lot!</h2>

<p>The documentation of the Ruby API may not be the best for beginners, but it&rsquo;s also open source. One of the best tools I have found for referencing documentation (even without an internet connection), is <a href="https://itunes.apple.com/us/app/dash-docs-snippets/id458034879?mt=12">Dash</a>. It&rsquo;s worth the $20 for the amount of time you&rsquo;ll save not going down a Google rabbit hole. Even if you&rsquo;re a seasoned programmer, it&rsquo;s a great tool. You can even find various <a href="https://github.com/rizzatti/dash.vim">editor plugins</a> for even faster API reference straight from your codebase.</p>

<h2>The learning never stops, so don&rsquo;t give up!</h2>

<p>I remember wanting to know all the things, all at once, at the start of gSchool. It was frustrating, and worse, it was unattainable. Our field is constantly changing, which means we&rsquo;ll never get bored. It also means that it&rsquo;s impossible to know everything. The beauty of being immersed in learning for six months is that we got a lot of exposure to different problems and different methods of solving them. Does this mean that any of us can walk away and sit down and build an entire complex web application without referencing any documentation? No. The reality is that all programmers reference the docs, and knowing what problem you are trying to solve will be infinitely more beneficial than memorizing the entire standard library. Work on learning how to break down complex problems, and the knowledge of the API will come.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mashing Code at CodeMash]]></title>
    <link href="http://codeadventurer.com/2014/01/11/mashing-code-at-codemash"/>
    <updated>2014-01-11T14:30:00-05:00</updated>
    <id>http://codeadventurer.com/2014/01/11/mashing-code-at-codemash</id>
    <content type="html"><![CDATA[<p>This past week, gSchool continued on while I took a few steps into the Ohio developer community. I&rsquo;ve been to conferences before, but not as a Ruby developer. <!-- more -->I&rsquo;ve been to conferences about web development in higher education, conferences focused on WordPress, and conferences focused on Drupal, but <a href="http://codemash.org">CodeMash</a> was my first multi-language conference &mdash; and the first one I&rsquo;d attended at at waterpark.</p>

<p>The conference was interesting. I met a lot of people from the surrounding states that worked in many different fields, but over and over again I heard people repeat the same mantra, or some rendition of it &mdash; &ldquo;.Net for pay, Ruby for play&rdquo;. This was interesting to me, because although I knew I&rsquo;d be returning to Ohio after gSchool, I hadn&rsquo;t looked into the job opportunities available before I accepted a slot in the class. I doubt if it would have changed my mind to know that locally there are only a handful of companies that work with Ruby, because I was very adamant about learning test driven development in a language that has a strong culture of testing.</p>

<p>Regardless, the first two days of the conference are called &ldquo;Precompiler&rdquo; days, where multiple half-day or whole-day workshops are run on different topics. I took the opportunity to learn about hacking on flying robots with Jim Weirich on Tuesday, and used his library, <a href="http://github.com/jimweirich/argus">Argus</a>, along with the <a href="https://github.com/hybridgroup/artoo">Artoo</a> library, to control an <a href="http://ardrone2.parrot.com">Ardrone</a> using <a href="http://leapmotion.com">LeapMotion</a>. I got to work with two other Ruby developers, Joel Byler and Ashton, while hacking &amp; discovering our way around the intricacies and mishaps of working with hardware and concurrent connections in Ruby. On the second Precompiler day, I worked with Arduino and beginning electronics, and had the opportunity to pair with some more brilliant, curious programmers to think about hardware hacking in ways I had not explored before. I learned new debugging tricks, and made connections between my basic circuitry knowledge and programming those interactions with Processing.</p>

<p>The final two days of the conference were more typical conference track sessions. I spent a good bit of time in the Javascript tracks, made a bit of progress in understanding Ember applications, and learned new concepts about concurrency in Ruby from <a href="http://twitter.com/jerrydantonio">Jerry D'Antonio</a>. I came away with new things to research and incorporate into future projects, and a great appreciation for the conference organizers. Over 2,000 people came together to learn new things, experiment with new tech, and share their experiences together, and all of it went smoothly from an attendee standpoint.</p>

<p>I&rsquo;m heading back to Denver to dive full-swing into our API project, and look forward to incorporating some Javascript techniques I learned about into the project. Although we&rsquo;re all thinking about where we&rsquo;re going to end up after gSchool, I want to finish my time there strong, and continue the full-time learning and experimentation while we&rsquo;re all still together.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[56 days until takeoff]]></title>
    <link href="http://codeadventurer.com/2014/01/03/56-days-until-takeoff"/>
    <updated>2014-01-03T09:05:00-05:00</updated>
    <id>http://codeadventurer.com/2014/01/03/56-days-until-takeoff</id>
    <content type="html"><![CDATA[<p>56 days from now, 26 students from gSchool will be closing their laptops, saying their goodbyes, and getting ready to start their careers as software developers. <!-- more --> Some of them will be staying in Denver, some will be joining past graduates of the program built by Jumpstart Lab, and others will be spreading out across the country, working at startups, consultancies, and corporations. Regardless of where they end up, the six months they spent together will never be forgotten. The shared wins and frustrations, the walking taco days and lunchtime dip parties, and plenty of post-project-deadline happy hours have built solid friendships that are sure to last the test of time.</p>

<p>Before that day comes, I still have work to do. As I&rsquo;m reading Sandi Metz&rsquo;s book, <a href="http://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330/ref=sr_1_1?ie=UTF8&amp;qid=1388765519&amp;sr=8-1&amp;keywords=practical+object-oriented+design+in+ruby">Practical Object Oriented Design in Ruby</a>, I see that I can improve on the way I think about and execute the design of applications. I&rsquo;m excited to work through the book, and apply the lessons in my projects.</p>

<p>I&rsquo;m also attending <a href="http://codemash.org">CodeMash</a> this upcoming week and will begin looking for companies where I would make a good fit. I&rsquo;m planning on returning to Ohio after graduation, and would like to see what sort of opportunities are available. Thanks to my instructors, I already have a few connections to meet with next week to discuss the job climate in the Cleveland area. I&rsquo;m excited to talk to them and get to know other Rubyists in Ohio.</p>

<p>While I&rsquo;m at CodeMash, I&rsquo;ll be missing work time on our current project, FeedEngine, which is all about APIs. I&rsquo;ll be doing my best to communicate with my group, and contribute where I can without interfering with the overall progress. It will be interesting to see if I can integrate lessons from the conference into the project as well.</p>

<p>I&rsquo;m also excited for our upcoming project focused on Service-Oriented Architecture, and finally our Mastery project. I received some fun hardware for Christmas and hope to use it in my final project to integrate my passion for technology with my passion for agriculture.</p>

<p>On a final note, my mentor, Matt Rogers, has been a tremendous resource. His help and understanding has really helped me grow as a developer. I applaud his ability to find relevant open-source work to help explain new concepts, or reinforce the ones I did not understand well. He has been diligent in following along the curriculum, asking me about the projects I am working on, and helping me understand where improvements can be made. I am very grateful for his time and his passion for mentoring. Without his help, I wouldn&rsquo;t have made as much learning progress in the last project as I had. Thank you, Matt!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Halfway Home]]></title>
    <link href="http://codeadventurer.com/2013/12/06/halfway-home"/>
    <updated>2013-12-06T09:05:00-05:00</updated>
    <id>http://codeadventurer.com/2013/12/06/halfway-home</id>
    <content type="html"><![CDATA[<p>Last week marked the halfway point for gSchool. We had our second assessments, using the instructions from the <a href="https://github.com/JumpstartLab/curriculum/blob/master/source/academy/workshops/scrabble_intermediate.markdown">Intermediate Scrabble</a> repo and requirements. <!-- more -->It was a fun challenge, and I&rsquo;ve had some major improvement since the previous assessment. After our assessments, we worked on a Rails tutorial that introduced some more advanced concepts. On Tuesday, the rest of the class worked on Arduino projects, but I had to catch a flight home for the holiday and missed out on that particular hack day. (But I got a few fun things from <a href="http://www.sparkfun.com">Sparkfun</a> on sale that I&rsquo;m going to hack on over Christmas). It felt great to go home for a few days, spend time with family, sleep in my bed, and program for only four hours instead of all day.</p>

<p>This week we got back at it in full force. We&rsquo;re working on <a href="http://tutorials.jumpstartlab.com/projects/fourth_meal.html#functional-requirements">Fourth Meal</a>, building upon Dinner Dash using a codebase that is different from the last project. My group chose the project I worked on last time, which I am grateful for, because I did not feel I understood all of the parts of it before. We started out by refactoring a few pieces of the code, exploring the implementations, deploying a staging and production site, and writing our user stories in <a href="https://www.pivotaltracker.com/s/projects/968652">Pivotal Tracker</a>. We&rsquo;ve been focused on writing proper user stories, understanding our iterations, and dealing with a &ldquo;real&rdquo; client (&ldquo;real&rdquo; meaning Jeff Casimir, acting (in good character)  a demanding client). Our project includes expanding the original codebase to support multi-tenancy (i.e. multiple restaurants in the system with the ability to shop between them independently). I&rsquo;m enjoying the focus on iterations, and sticking to user stories throughout the development process. I believe it&rsquo;s important to delivering value as quickly as possible in an agile way.</p>

<p>Yesterday, we also started a small side project with <a href="http://yacenter.org/">Young Entrepreneurs</a> to help a group of kids launch their online presence for the small businesses they are working on. We have a different group in this project than for Fourth Meal, and are primarily working on design and listening to client needs. Our clients are two young girls (age 7 and 11) that have launched their own body care products line. They are very excited about their products, and it amazes me at how professional they acted for their ages. We had a great brainstorming session with them, and I&rsquo;m looking forward to sharing our ideas and wireframes with them next week for their input.</p>

<p>Halfway through the course, I&rsquo;m feeling excited about my progress and the ways I&rsquo;ve grown along the way. I&rsquo;m excited to see where I stand at the end of the course, and how I continue to progress at my first job out of gSchool. I feel that my ability to collaborate with other developers has vastly improved. Prior to gSchool, I was always a lone coder &mdash; this was not by choice, but due to the work styles of the previous workplaces. I&rsquo;m starting to get better at articulating my thoughts verbally during pair programming sessions, explaining why something makes sense in my head without taking over someone&rsquo;s keyboard, and articulating when I&rsquo;m stuck on a piece of functionality and the thought process behind what I&rsquo;m trying to accomplish and the things I&rsquo;ve already tried that didn&rsquo;t seem to work.</p>

<p>I&rsquo;m excited to continue working on Fourth Meal with my group members, and seeing where we can take this project by the deadline. It will be interesting to see if we have estimated our iterations correctly, and to see if keeping a close eye on Tracker will help us reach our goals and deliver a great final product.</p>
]]></content>
  </entry>
  
</feed>
